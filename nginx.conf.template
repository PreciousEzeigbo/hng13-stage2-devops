events {
    worker_connections 1024;
}

http {
    # Custom log format with upstream details
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'pool=$upstream_http_x_app_pool '
                       'release=$upstream_http_x_release_id '
                       'upstream_status=$upstream_status '
                       'upstream=$upstream_addr '
                       'request_time=$request_time '
                       'upstream_response_time=$upstream_response_time';

    # Log to shared volume
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    upstream app_backend {
        # Primary based on ACTIVE_POOL
        server app_${ACTIVE_POOL}:${PORT} max_fails=1 fail_timeout=10s;
        
        # Both as backup
        server app_blue:${PORT} backup max_fails=1 fail_timeout=10s;
        server app_green:${PORT} backup max_fails=1 fail_timeout=10s;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Ensure headers pass through
            proxy_buffering off;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
            
            # Failover configuration
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 8s;
            
            # Tight timeouts for quick failover
            proxy_connect_timeout 1s;
            proxy_send_timeout 1s;
            proxy_read_timeout 1s;
        }

        location /healthz {
            proxy_pass http://app_backend/healthz;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        }

        # Status endpoint for monitoring
        location /nginx-status {
            stub_status on;
            access_log off;
        }
    }
}